name: Run Smoke Tests
on:
  workflow_dispatch:
    inputs:
      test_path:
        description: "Optional Dropbox path for get_temp_link"
        required: false
        default: ""
permissions:
  contents: read
  id-token: write
jobs:
  smoke:
    runs-on: ubuntu-latest
    env:
      BASE: ${{ secrets.FUNC_BASE_URL }}
      CODE: ${{ secrets.FUNC_CODE_DEFAULT }}
      TEST_PATH: ${{ github.event.inputs.test_path }}
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update -y && sudo apt-get install -y jq curl
      - name: Echo base URL
        run: |
          echo "Base: $BASE"
          if [ -z "$BASE" ] || [ -z "$CODE" ]; then
            echo "::error::Missing FUNC_BASE_URL or FUNC_CODE_DEFAULT"
            exit 1
          fi
      - name: Compliance audit
        id: compliance
        run: |
          set +e
          url="$BASE/api/compliance/audit?code=$CODE"
          resp=$(curl -s -S -w "\n%{http_code}" "$url")
          body=$(echo "$resp" | head -n -1)
          code=$(echo "$resp" | tail -n 1)
          echo "$body" | jq -r . || true
          if [ "$code" -ge 500 ]; then
            echo "::warning::Compliance endpoint returned $code (view may not be installed)."
          fi
      - name: Transfer (dry-run)
        run: |
          url="$BASE/api/transfer_property_owner?code=$CODE"
          cat > body.json <<'JSON'
          {
            "from_owner": {"id": 101, "name": "Sunset Capital Partners"},
            "to_owner":   {"id": 202, "name": "Northstar Holdings"},
            "property":   {"id": 201, "name": "Sunset Villas"},
            "dry_run": true
          }
          JSON
          resp=$(curl -s -S -w "\n%{http_code}" -H "Content-Type: application/json" -d @body.json "$url")
          body=$(echo "$resp" | head -n -1); code=$(echo "$resp" | tail -n 1)
          echo "$body" | jq -r .
          test "$code" -ge 200 -a "$code" -lt 300
      - name: DoorLoop writeback (dry-run)
        run: |
          url="$BASE/api/doorloop_writeback?code=$CODE"
          cat > dl.json <<'JSON'
          {
            "property_id": 201,
            "from_owner_id": 101,
            "to_owner_id": 202,
            "effective_date": "2025-08-15",
            "dry_run": true
          }
          JSON
          resp=$(curl -s -S -w "\n%{http_code}" -H "Content-Type: application/json" -d @dl.json "$url")
          body=$(echo "$resp" | head -n -1); code=$(echo "$resp" | tail -n 1)
          echo "$body" | jq -r .
          test "$code" -ge 200 -a "$code" -lt 300
      - name: Webhook ingestor (skip signature)
        run: |
          url="$BASE/api/webhook_ingestor?skip_sig=1&code=$CODE"
          cat > wh.json <<'JSON'
          {
            "type": "property.transferred",
            "property": {"id": 201, "name": "Sunset Villas"},
            "from_owner": {"id": 101, "name": "Sunset Capital Partners"},
            "to_owner": {"id": 202, "name": "Northstar Holdings"},
            "effective_date": "2025-08-15"
          }
          JSON
          resp=$(curl -s -S -w "\n%{http_code}" -H "Content-Type: application/json" -d @wh.json "$url")
          body=$(echo "$resp" | head -n -1); code=$(echo "$resp" | tail -n 1)
          echo "$body" | jq -r .
          test "$code" -ge 200 -a "$code" -lt 300
      - name: Get temp link (optional)
        if: ${{ env.TEST_PATH != '' }}
        run: |
          enc=$(python - <<'PY'\nimport urllib.parse, os; print(urllib.parse.quote(os.environ['TEST_PATH']))\nPY\n)
          url="$BASE/api/get_temp_link?code=$CODE&path=$enc"
          resp=$(curl -s -S -w "\n%{http_code}" "$url")
          body=$(echo "$resp" | head -n -1); code=$(echo "$resp" | tail -n 1)
          echo "$body" | jq -r .
          test "$code" -ge 200 -a "$code" -lt 300
      - run: echo "Smoke tests complete âœ…"
